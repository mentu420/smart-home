import { ComponentPublicInstance } from 'vue';
import { CalendarPropsType } from './Calendar';
import { CalendarDatePropsType } from './CalendarDate';
import { CalendarTimePropsType } from './CalendarTime';
export declare type ThemeColorType = {
    'main-color': string;
    'bg-color': string;
    'main-font-color': string;
    'vice-font-color': string;
    'disabled-bg-color': string;
    'disabled-font-color': string;
};
export declare type PickerType = 'datetime' | 'date' | 'time';
export declare type SelectType = 'single' | 'multiple' | 'range';
export declare type CalendarPanelType = 'date' | 'month' | 'year' | 'yearRange';
export declare type ModelType = 'dialog' | 'inline';
export declare type LangType = 'EN' | 'CN';
export declare type MarkType = 'dot' | 'circle' | 'dot+circle';
export declare type MarkDateType = {
    date: string[];
    type?: MarkType;
    color: string;
} | string;
export declare type WeekStartType = 'Sunday' | 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday';
export declare type DisabledScrollType = boolean | 'left' | 'right' | 'up' | 'down' | 'horizontal' | 'vertical';
export declare type ScrollDirectionType = 'left' | 'right' | 'up' | 'down';
export declare type CalendarDayType = 'single' | 'start' | 'middle' | 'end' | 'start-end' | 'multiple';
export declare type CalendarDateType = {
    year: number;
    month: number;
    day: number;
    hours: number;
    minutes: number;
    type?: CalendarDayType;
};
export declare type CalendarMonthType = Pick<CalendarDateType, 'day' | 'month' | 'year' | 'type'>;
export declare type CalendarYearMonthType = {
    year: number;
    month: number;
};
export declare type EmitDateType = Date | string;
export declare type CalendarExposeType = {
    today: () => void;
    reset: (date: Date) => void;
    lastMonth: () => void;
    nextMonth: () => void;
    lastWeek: () => void;
    nextWeek: () => void;
};
export declare type CalendarDateExposeType = {
    today: () => void;
    getLastMonth: () => void;
    getNextMonth: () => void;
    changeWeekView: (options: {
        isNext: boolean;
    }) => void;
};
export declare type CalendarInstance = ComponentPublicInstance<CalendarPropsType, CalendarExposeType>;
export declare type CalendarDateInstance = ComponentPublicInstance<CalendarDatePropsType, CalendarDateExposeType>;
export declare type CalendarTimeInstance = ComponentPublicInstance<CalendarTimePropsType>;
