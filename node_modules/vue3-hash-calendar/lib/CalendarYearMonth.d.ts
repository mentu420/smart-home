import { ExtractPropTypes, type PropType } from 'vue';
import type { CalendarPanelType, CalendarYearMonthType, DisabledScrollType, LangType } from './types';
export declare const calendarYearMonthProps: {
    minDate: {
        type: DateConstructor;
        validator: (val: unknown) => val is Date;
        default: Date | null;
    };
    maxDate: {
        type: DateConstructor;
        validator: (val: unknown) => val is Date;
        default: Date | null;
    };
    disabledDate: {
        type: FunctionConstructor;
        default: () => boolean;
    };
    checkedDayClassName: {
        type: PropType<string>;
        default: string;
    };
    notCurrentMonthDayClassName: {
        type: PropType<string>;
        default: string;
    };
    disabledClassName: {
        type: PropType<string>;
        default: string;
    };
    type: {
        type: PropType<CalendarPanelType>;
        default: CalendarPanelType;
    };
    calendarContentHeight: {
        type: NumberConstructor;
        default: number;
    };
    disabledScroll: {
        type: PropType<DisabledScrollType>;
        default: () => boolean;
    };
    currentYearMonth: {
        type: PropType<CalendarYearMonthType>;
        default: () => {};
    };
    lang: {
        type: PropType<LangType>;
        default: LangType;
    };
};
export declare type CalendarYearMonthPropsType = ExtractPropTypes<typeof calendarYearMonthProps>;
declare const _default: import("vue").DefineComponent<{
    minDate: {
        type: DateConstructor;
        validator: (val: unknown) => val is Date;
        default: Date | null;
    };
    maxDate: {
        type: DateConstructor;
        validator: (val: unknown) => val is Date;
        default: Date | null;
    };
    disabledDate: {
        type: FunctionConstructor;
        default: () => boolean;
    };
    checkedDayClassName: {
        type: PropType<string>;
        default: string;
    };
    notCurrentMonthDayClassName: {
        type: PropType<string>;
        default: string;
    };
    disabledClassName: {
        type: PropType<string>;
        default: string;
    };
    type: {
        type: PropType<CalendarPanelType>;
        default: CalendarPanelType;
    };
    calendarContentHeight: {
        type: NumberConstructor;
        default: number;
    };
    disabledScroll: {
        type: PropType<DisabledScrollType>;
        default: () => boolean;
    };
    currentYearMonth: {
        type: PropType<CalendarYearMonthType>;
        default: () => {};
    };
    lang: {
        type: PropType<LangType>;
        default: LangType;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("click" | "slidechange" | "touchstart" | "touchmove" | "touchend")[], "click" | "slidechange" | "touchstart" | "touchmove" | "touchend", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<ExtractPropTypes<{
    minDate: {
        type: DateConstructor;
        validator: (val: unknown) => val is Date;
        default: Date | null;
    };
    maxDate: {
        type: DateConstructor;
        validator: (val: unknown) => val is Date;
        default: Date | null;
    };
    disabledDate: {
        type: FunctionConstructor;
        default: () => boolean;
    };
    checkedDayClassName: {
        type: PropType<string>;
        default: string;
    };
    notCurrentMonthDayClassName: {
        type: PropType<string>;
        default: string;
    };
    disabledClassName: {
        type: PropType<string>;
        default: string;
    };
    type: {
        type: PropType<CalendarPanelType>;
        default: CalendarPanelType;
    };
    calendarContentHeight: {
        type: NumberConstructor;
        default: number;
    };
    disabledScroll: {
        type: PropType<DisabledScrollType>;
        default: () => boolean;
    };
    currentYearMonth: {
        type: PropType<CalendarYearMonthType>;
        default: () => {};
    };
    lang: {
        type: PropType<LangType>;
        default: LangType;
    };
}>> & {
    onClick?: ((...args: any[]) => any) | undefined;
    onSlidechange?: ((...args: any[]) => any) | undefined;
    onTouchstart?: ((...args: any[]) => any) | undefined;
    onTouchmove?: ((...args: any[]) => any) | undefined;
    onTouchend?: ((...args: any[]) => any) | undefined;
}, {
    type: CalendarPanelType;
    minDate: Date;
    maxDate: Date;
    disabledDate: Function;
    lang: LangType;
    disabledScroll: DisabledScrollType;
    checkedDayClassName: string;
    notCurrentMonthDayClassName: string;
    disabledClassName: string;
    calendarContentHeight: number;
    currentYearMonth: CalendarYearMonthType;
}>;
export default _default;
