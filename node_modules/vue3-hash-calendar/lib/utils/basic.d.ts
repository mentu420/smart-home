import { CalendarDateType, CalendarMonthType, LangType } from '../types';
/**
 * 日期格式化
 * @param time
 * @param format
 * @returns {string}
 */
export declare const formatDate: (time: Date | string, format: string, lang?: LangType) => string;
export declare const fillNumber: (val: number) => string | number;
export declare const daysOfMonth: (year: number) => number[];
export declare const getDayOfWeek: (year?: number, month?: number, day?: number) => number;
export declare type Writeable<T> = {
    -readonly [P in keyof T]: T[P];
};
export declare function pick<T, U extends keyof T>(obj: T, keys: ReadonlyArray<U>, ignoreUndefined?: boolean): Writeable<Pick<T, U>>;
export declare const transDateToYearMonthDay: (date: Date) => {
    year: number;
    month: number;
    day: number;
};
export declare const transDateToHourMinute: (date: Date) => {
    year: number;
    month: number;
    day: number;
    hours: number;
    minutes: number;
};
export declare const transYearMontDayToDate: (date: CalendarMonthType) => Date;
export declare const transHourMinuteToDate: (date: CalendarDateType) => Date;
export declare const getMinDate: (min: Date) => number;
export declare const getMaxDate: (max: Date) => number;
export declare function compareMonth(date1: CalendarMonthType, date2: CalendarMonthType): 1 | 0 | -1;
export declare function compareDay(day1: CalendarMonthType, day2: CalendarMonthType): 1 | 0 | -1;
export declare const cloneDate: (date: Date) => Date;
export declare const cloneDates: (dates: Date | Date[]) => Date | Date[];
export declare function getDayByOffset(date: Date, offset: number): Date;
export declare const getPrevDay: (date: CalendarMonthType) => Date;
export declare const getNextDay: (date: CalendarMonthType) => Date;
export declare const getToday: () => Date;
export declare function calcDateNum(date: [Date, Date]): number;
export declare function calcMiddleDay(date: [CalendarMonthType, CalendarMonthType]): CalendarMonthType[];
export declare const getStartEndDay: (date: CalendarMonthType[]) => CalendarMonthType[];
