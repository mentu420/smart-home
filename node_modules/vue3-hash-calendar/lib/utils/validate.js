var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var stdin_exports = {};
__export(stdin_exports, {
  checkPlatform: () => checkPlatform,
  isDate: () => isDate,
  isDateInRange: () => isDateInRange,
  isLeap: () => isLeap,
  isWindow: () => isWindow
});
module.exports = __toCommonJS(stdin_exports);
var import__ = require(".");
const checkPlatform = function() {
  if (/android/i.test(navigator.userAgent)) {
    return "1";
  }
  if (/(iPhone|iPad|iPod|iOS)/i.test(navigator.userAgent)) {
    return "2";
  }
};
const isDateInRange = (curr, min, max) => {
  const minDate = (0, import__.getMinDate)(min);
  const maxDate = (0, import__.getMaxDate)(max);
  const currentDate = new Date(curr.setHours(0, 0, 0, 0)).getTime();
  if (minDate && maxDate)
    return currentDate > minDate && currentDate < maxDate;
  if (minDate)
    return currentDate > minDate;
  if (maxDate)
    return currentDate < maxDate;
  return true;
};
const isWindow = (val) => val === window;
const isDate = (val) => Object.prototype.toString.call(val) === "[object Date]" && !Number.isNaN(val.getTime());
const isLeap = (year) => year % 4 === 0 ? year % 100 !== 0 ? 1 : year % 400 === 0 ? 1 : 0 : 0;
