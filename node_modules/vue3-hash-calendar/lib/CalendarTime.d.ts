import { ExtractPropTypes, PropType } from 'vue';
import { CalendarDateType } from './types';
export declare const calendarTimeProps: {
    show: BooleanConstructor;
    defaultTime: {
        type: DateConstructor;
        validator: (val: unknown) => val is Date;
        default: Date | null;
    };
    disabledTime: {
        type: FunctionConstructor;
        default: () => boolean;
    };
    minuteStep: {
        type: NumberConstructor;
        default: number;
    };
    calendarDate: {
        type: PropType<CalendarDateType>;
        default: () => {};
    };
};
export declare type CalendarTimePropsType = ExtractPropTypes<typeof calendarTimeProps>;
declare const _default: import("vue").DefineComponent<{
    show: BooleanConstructor;
    defaultTime: {
        type: DateConstructor;
        validator: (val: unknown) => val is Date;
        default: Date | null;
    };
    disabledTime: {
        type: FunctionConstructor;
        default: () => boolean;
    };
    minuteStep: {
        type: NumberConstructor;
        default: number;
    };
    calendarDate: {
        type: PropType<CalendarDateType>;
        default: () => {};
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "change"[], "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<ExtractPropTypes<{
    show: BooleanConstructor;
    defaultTime: {
        type: DateConstructor;
        validator: (val: unknown) => val is Date;
        default: Date | null;
    };
    disabledTime: {
        type: FunctionConstructor;
        default: () => boolean;
    };
    minuteStep: {
        type: NumberConstructor;
        default: number;
    };
    calendarDate: {
        type: PropType<CalendarDateType>;
        default: () => {};
    };
}>> & {
    onChange?: ((...args: any[]) => any) | undefined;
}, {
    show: boolean;
    defaultTime: Date;
    disabledTime: Function;
    minuteStep: number;
    calendarDate: CalendarDateType;
}>;
export default _default;
